{"is_source_file": true, "format": "Java", "description": "This file defines a global exception handler for a Spring Boot REST API, managing various exceptions and returning structured error responses.", "external_files": ["com.example.usermanagementbackend.dto.ErrorResponse", "org.springframework.http.ResponseEntity", "org.springframework.http.HttpStatus", "org.springframework.security.authentication.BadCredentialsException", "org.springframework.security.core.userdetails.UsernameNotFoundException", "org.springframework.web.bind.MethodArgumentNotValidException", "org.springframework.web.bind.annotation.ExceptionHandler", "org.springframework.web.bind.annotation.RestControllerAdvice", "org.springframework.web.context.request.WebRequest"], "external_methods": ["ErrorResponse.<init>(int, String, String, String)", "WebRequest.getDescription(boolean)", "MethodArgumentNotValidException.getBindingResult()", "BindingResult.getAllErrors()", "ObjectError.<error class>.getDefaultMessage()", "FieldError.<error class>.getField()"], "published": ["GlobalExceptionHandler"], "classes": [{"name": "GlobalExceptionHandler", "description": "A REST controller advice class that handles exceptions globally across the application, mapping exceptions to HTTP responses."}], "methods": [{"name": "handleBadRequestException", "description": "Handles BadRequestException and returns a 400 BAD REQUEST response with an ErrorResponse payload."}, {"name": "handleNotFoundException", "description": "Handles NotFoundException and returns a 404 NOT FOUND response with an ErrorResponse payload."}, {"name": "handleBadCredentialsException", "description": "Handles BadCredentialsException and returns a 401 UNAUTHORIZED response with an ErrorResponse payload indicating invalid credentials."}, {"name": "handleUsernameNotFoundException", "description": "Handles UsernameNotFoundException and returns a 404 NOT FOUND response with an ErrorResponse payload."}, {"name": "handleValidationExceptions", "description": "Handles validation errors from MethodArgumentNotValidException, returning a map of field errors with a 400 BAD REQUEST status."}, {"name": "handleGlobalException", "description": "Handles all other exceptions, returning a generic 500 INTERNAL SERVER ERROR response with an ErrorResponse payload."}], "calls": ["new ErrorResponse(int, String, String, String)", "request.getDescription(boolean)", "ex.getBindingResult()", "bindingResult.getAllErrors()", "error.getDefaultMessage()", "error.getField()"], "search-terms": ["GlobalExceptionHandler", "Spring Boot REST exception handling", "ExceptionHandler annotations", "ErrorResponse structure", "Global error handling in Spring"], "state": 2, "file_id": 25, "knowledge_revision": 52, "git_revision": "", "hash": "667c0a4941ad0c14cbf9d738e171a9a5", "format-version": 4, "code-base-name": "user_management_backend", "filename": "user_management_backend/src/main/java/com/example/usermanagementbackend/exception/GlobalExceptionHandler.java", "revision_history": [{"52": ""}]}