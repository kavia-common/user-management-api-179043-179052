{"is_source_file": true, "format": "Java", "description": "This file contains security configuration for JWT authentication and OAuth2 integration in a Spring Boot application, including security filter chain setup, password encoder, and authentication provider beans.", "external_files": ["com.example.usermanagementbackend.security.CustomUserDetailsService", "com.example.usermanagementbackend.security.JwtAuthenticationFilter", "com.example.usermanagementbackend.security.OAuth2AuthenticationSuccessHandler"], "external_methods": ["org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder.<init>()", "org.springframework.security.authentication.AuthenticationManager authenticationManager(AuthenticationConfiguration)", "org.springframework.security.config.annotation.web.builders.HttpSecurity.csrf()", "org.springframework.security.config.annotation.web.builders.HttpSecurity.sessionManagement()", "org.springframework.security.config.annotation.web.builders.HttpSecurity.authorizeHttpRequests()", "org.springframework.security.config.annotation.web.builders.HttpSecurity.oauth2Login()", "org.springframework.security.config.annotation.web.builders.HttpSecurity.authenticationProvider()", "org.springframework.security.config.annotation.web.builders.HttpSecurity.addFilterBefore()"], "published": ["passwordEncoder", "authenticationProvider", "authenticationManager", "filterChain"], "classes": [{"name": "SecurityConfig", "description": "Configuration class that sets up security filters, authentication providers, and OAuth2/JWT integrations for the application."}], "methods": [{"name": "passwordEncoder", "description": "Provides a password encoder bean using BCryptPasswordEncoder."}, {"name": "authenticationProvider", "description": "Creates and configures a DaoAuthenticationProvider with user details service and password encoder."}, {"name": "authenticationManager", "description": "Retrieves the AuthenticationManager from the given AuthenticationConfiguration."}, {"name": "filterChain", "description": "Defines the security filter chain, including CSRF disable, session management, request authorization rules, OAuth2 login, and JWT filter integration."}], "calls": ["org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder.<init>()", "authConfig.getAuthenticationManager()", "http.csrf().disable()", "http.sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS)", "http.authorizeHttpRequests()", "http.oauth2Login()", "http.authenticationProvider()", "http.addFilterBefore()", "headers.frameOptions().disable()"], "search-terms": ["SecurityConfig", "JWT authentication", "OAuth2 login", "Spring Security configuration", "HttpSecurity", "filter chain"], "state": 2, "file_id": 19, "knowledge_revision": 57, "git_revision": "", "revision_history": [{"42": ""}, {"57": ""}], "hash": "98d453411ff02e97f5572e5c03caebcf", "format-version": 4, "code-base-name": "user_management_backend", "filename": "user_management_backend/src/main/java/com/example/usermanagementbackend/config/SecurityConfig.java"}